name: OmaDataOAuth2 Playwright E2E tests

inputs:
  shardIndex:
    required: true
    type: string
  shardTotal:
    required: true
    type: string
  AWS_OPH_UTILITY_ROLE_ARN:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: "üî® Setup Java"
      uses: ./.github/actions/setup_java_11_and_23
    - name: "üî® Setup backend and databases"
      uses: ./.github/actions/setup_backend
    - name: "üåç Setup Playwright"
      uses: ./.github/actions/omadataoauth2_setup_playwright

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.AWS_OPH_UTILITY_ROLE_ARN }}
        role-session-name: koski-luovutuspalvelu-proxy-image-push
        role-duration-seconds: 3600
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: "true"

    - name: Pull koski-luovutuspalvelu image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      shell: bash
      run: |
        docker pull $ECR_REGISTRY/utility/koski-luovutuspalvelu-proxy:latest
        docker tag $ECR_REGISTRY/utility/koski-luovutuspalvelu-proxy:latest koski-luovutuspalvelu-proxy:latest

    - name: Run Playwright tests
      env:
        PLAYWRIGHT_SHARD_INDEX: ${{inputs.shardIndex}}
        PLAYWRIGHT_SHARD_TOTAL: ${{inputs.shardTotal}}
        PLAYWRIGHT_HTML_REPORT: omadataoauth2-e2e-report-${{inputs.shardIndex}}-of-${{inputs.shardTotal}}
      run: mvn scalatest:test -DwildcardSuites="fi.oph.koski.omadataoauth2.e2e" --batch-mode
      shell: bash
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: omadataoauth2-e2e-report-${{inputs.shardIndex}}-of-${{inputs.shardTotal}}
        path: omadata-oauth2-sample/client/omadataoauth2-e2e-report-${{inputs.shardIndex}}-of-${{inputs.shardTotal}}/
        retention-days: 3
