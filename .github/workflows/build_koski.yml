name: Build Koski & Valpas
on:
  pull_request:

jobs:
  build-koski-frontend:
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        node-version: [ 16.19.0 ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: "Install npm dependencies"
        working-directory: "web"
        run: npm ci
      - name: "Check Koski build cache"
        uses: actions/cache@v3
        id: koski-frontend-build-cache
        with:
          path: target/webapp/koski
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('web/app/**') }}
      - name: "Build Koski web"
        if: steps.koski-frontend-build-cache.outputs.cache-hit != 'true'
        working-directory: "web"
        run: npm run build:prod
  build-valpas-frontend:
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        node-version: [ 16.19.0 ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: valpas-web/package-lock.json
      - name: "Install npm dependencies"
        working-directory: valpas-web
        run: npm ci
      - name: "Check Valpas build cache"
        uses: actions/cache@v3
        id: valpas-frontend-build-cache
        with:
          path: target/webapp/valpas
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('valpas-web/src/**') }}
      - name: "Build Valpas web"
        if: steps.valpas-frontend-build-cache.outputs.cache-hit != 'true'
        working-directory: "valpas-web"
        run: npm run build:prod
  build-koski-backend:
    needs: [build-koski-frontend, build-valpas-frontend]
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        java-version: [ 11 ]
        java-arch: [ x64 ]
        java-dist: [ zulu ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          architecture: ${{ matrix.java-arch }}
          distribution: ${{ matrix.java-dist }}
      - name: Check Maven version
        run: mvn --version
      - name: Check target folder contents
        run: ls -lra target/webapp
