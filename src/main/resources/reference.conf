// DB config for Slick, see http://slick.lightbend.com/doc/3.1.0/api/index.html#slick.jdbc.JdbcBackend$DatabaseFactoryDef@forConfig(String,Config,Driver,ClassLoader):Database
db = {
  host = "localhost"
  port = 5432
  name = "koski"
  user = "oph"
  password = "oph"
  numThreads = 20
  queueSize = 10000
  poolName = "koskiMasterPool"
  maxConnections = 50
  registerMbeans = true
  initializationFailFast = true
  // Properties to be passed to the PostgreSQL JDBC driver
  properties = {
    socketTimeout = 60
  }
  replica = {
    maxConnections = 20
    poolName = "koskiReplicaPool"
  }
  raportointi = {
    poolName = "koskiRaportointiPool"
    maxConnections = 5
    properties = {
      socketTimeout = 900
    }
  }
  driverClassName=org.postgresql.Driver
}
koodisto = {
  create = false
  update = false
}
localization = {
  create = true
  update = false
}
authentication-service.useCas=true
virta = {
  jarjestelma="KOSKI"
  tunnus="koski"
  avain="salaisuus"
}

healthcheck.oppija.oid = "1.2.246.562.24.00000000001"
sessionTimeoutMinutes=60
schedule {
  henkilötiedotUpdateInterval="1m"
  perustiedotSyncInterval="1s"
  tiedonsiirtoSyncInterval="1s"
}
koski.root.url="http://localhost:7021/koski"

koski.oppija.domain.fi="localhost"
koski.oppija.domain.sv=""
koski.cookieDomains=[${koski.oppija.domain.fi}]

authenticationFailed.initialDelay="10s"
authenticationFailed.resetAfter="24h"
acceptSyntheticHetus = false

elasticsearch = {
  host = "localhost"
  port = 9200
  reIndexAtStartup = false
}

features = {
  shibboleth = true
  tiedonsiirtomail = true
}

// These mock values need to be overridden. Otherwise mock data will be used.
virta.serviceUrl="mock"
#virta.serviceUrl="http://virtawstesti.csc.fi/luku/OpiskelijanTiedot"
eperusteet.baseUrl="https://eperusteet.opintopolku.fi"
eperusteet.url="mock"
opintopolku.virkailija.url="mock"
ryhmäsähköposti.virkailija.url="mock"
ytr.url = "mock"
prometheus.url="mock"
localization.url="mock"
identification.url.fi="/koski/login/shibboleth"
identification.url.sv=${identification.url.fi}
shibboleth.security="mock"
logout.url.fi=""
logout.url.sv=""

piwik.siteId = ""
env: "local"

mydata = {
  login {
    targetparam = "?login="
    shibboleth {
      fi = "/koski/login/shibboleth" # Login: "Korhopankki", or Tupas in production
      sv = ${mydata.login.shibboleth.fi}
    }
  }
  members = [
    {
      id = "hsl" # Identify share in database ('asiakas' column)
      name = "HSL Helsingin Seudun Liikenne" # Display name for the student
      membercodes = ["2769790-1"] # Identify API caller
      subsystemcodes = ["koski"] # Unused
      login.target = "/koski/user/omadatalogin" # This is where we land after shibboleth login (when we have the cookie)
    },
    {
      id = "frank"
      name = "Frank"
      membercodes = ["2769790-2"]
      subsystemcodes = ["koski"]
    },
  ]
}
